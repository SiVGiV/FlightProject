        ANY: create_new_user(username: str, password: str, email: str)
        ANON: facade_from_user(self, user: dict)
        ANON: login(self, request, username, password)

        
/flight/<id>
    get
        ANY: get_flight_by_id(self, id: int)
        AIRLINE: get_my_flights(self, request, limit: int = 100, page: int = 0)
    update
        AIRLINE: update_flight(self, request, flight_id: int, **updated_fields)
    delete
        AIRLINE: cancel_flight(self, request, flight_id)


/flights
    get
        ANY: get_all_flights(self, limit: int = 100, page: int = 1)
        ANY: get_flights_by_parameters(self, origin_country_id: Union[int, None], destination_country_id: Union[int, None], date: Union[Date, None], limit: int = 100, page: int = 1)
    post
        AIRLINE: add_flight(self, request, origin_id: int, destination_id: int, departure_datetime: datetime, arrival_datetime: datetime, total_seats: int)



/airline/<id>
    get
        ANY: get_airline_by_id(self, id: int)
    update
        AIRLINE: update_airline(self, request, name: Union[str, None] = None, country_id: Union[int, None] = None)
    delete
        ADMIN: deactivate_airline(self, request, airline_id)


/airlines
    get
        ANY: get_all_airlines(self,  limit: int = 100, page: int = 1)
        ANY: get_airlines_by_name(self, name: str, limit: int = 100, page: int = 1)
    post
        ADMIN: add_airline(self, request, name: str, country_id: int, user_id: int)



/countries
    get
        ANY: get_all_countries(self, limit: int = 100, page: int = 0)

/country/<id>
    get
        ANY: get_country_by_id(self, id: int)



/customers
    get
        ADMIN: get_all_customers(self, request, limit: int = 100, page: int = 1)
    post
        ANON, ADMIN: add_customer(self, request, user_id: int, first_name: str, last_name: str, address: str, phone_number: str)
    update
    delete

/customer/<id>
    update
        CUSTOMER: update_customer(self, request, id, **updated_fields)
    delete
        ADMIN: deactivate_customer(self, request, customer_id)



/tickets
    get
        CUSTOMER: get_my_tickets(self, request, limit: int = 100, page: int = 0)
    post
        CUSTOMER: add_ticket(self, request, flight_id: int, seat_count: int)
    update
    delete
        CUSTOMER: cancel_ticket(self, request, ticket_id)

/tickets/<id>
    get
    post
    update
    delete



/admins
    post
        ADMIN: add_administrator(self, request, user_id: int, first_name: str, last_name: str)
    update
    delete
        ADMIN: deactivate_administrator(self, request, admin_id)

/admin/<id>
    get
    post
    update
    delete